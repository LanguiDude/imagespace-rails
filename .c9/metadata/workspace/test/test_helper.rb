{"filter":false,"title":"test_helper.rb","tooltip":"/test/test_helper.rb","undoManager":{"mark":6,"position":6,"stack":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":13,"column":2},"end":{"row":13,"column":59}},"text":"# Add more helper methods to be used by all tests here..."}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":0},"end":{"row":10,"column":43}},"text":"  # -- they do not yet inherit this setting"},{"action":"removeLines","range":{"start":{"row":7,"column":0},"end":{"row":10,"column":0}},"nl":"\n","lines":["  # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.","  #","  # Note: You'll currently still have to declare fixtures explicitly in integration tests"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":0},"end":{"row":9,"column":45}},"text":"  # Returns true if a test user is logged in."},{"action":"insertText","range":{"start":{"row":9,"column":45},"end":{"row":10,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":10,"column":0},"end":{"row":12,"column":0}},"lines":["  def is_logged_in?","    !session[:user_id].nil?"]},{"action":"insertText","range":{"start":{"row":12,"column":0},"end":{"row":12,"column":5}},"text":"  end"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":2},"end":{"row":13,"column":26}},"text":"  # Logs in a test user."},{"action":"insertText","range":{"start":{"row":13,"column":26},"end":{"row":14,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":14,"column":0},"end":{"row":32,"column":0}},"lines":["  def log_in_as(user, options = {})","    password    = options[:password]    || 'password'","    remember_me = options[:remember_me] || '1'","    if integration_test?","      post login_path, session: { email:       user.email,","                                  password:    password,","                                  remember_me: remember_me }","    else","      session[:user_id] = user.id","    end","  end","","  private","","    # Returns true inside an integration test.","    def integration_test?","      defined?(post_via_redirect)","    end"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":13,"column":1},"end":{"row":13,"column":3}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":1},"end":{"row":14,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":14,"column":0},"end":{"row":14,"column":1}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":1},"end":{"row":15,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":15,"column":0},"end":{"row":15,"column":1}},"text":" "}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":33,"column":7},"end":{"row":33,"column":7},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1415428872514,"hash":"4858b769bd0395c627b351744ea378b4edf12eb2"}