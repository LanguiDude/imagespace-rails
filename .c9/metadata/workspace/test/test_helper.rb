{"filter":false,"title":"test_helper.rb","tooltip":"/test/test_helper.rb","undoManager":{"mark":8,"position":8,"stack":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":13,"column":2},"end":{"row":13,"column":59}},"text":"# Add more helper methods to be used by all tests here..."}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":0},"end":{"row":10,"column":43}},"text":"  # -- they do not yet inherit this setting"},{"action":"removeLines","range":{"start":{"row":7,"column":0},"end":{"row":10,"column":0}},"nl":"\n","lines":["  # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.","  #","  # Note: You'll currently still have to declare fixtures explicitly in integration tests"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":0},"end":{"row":9,"column":45}},"text":"  # Returns true if a test user is logged in."},{"action":"insertText","range":{"start":{"row":9,"column":45},"end":{"row":10,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":10,"column":0},"end":{"row":12,"column":0}},"lines":["  def is_logged_in?","    !session[:user_id].nil?"]},{"action":"insertText","range":{"start":{"row":12,"column":0},"end":{"row":12,"column":5}},"text":"  end"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":2},"end":{"row":13,"column":26}},"text":"  # Logs in a test user."},{"action":"insertText","range":{"start":{"row":13,"column":26},"end":{"row":14,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":14,"column":0},"end":{"row":32,"column":0}},"lines":["  def log_in_as(user, options = {})","    password    = options[:password]    || 'password'","    remember_me = options[:remember_me] || '1'","    if integration_test?","      post login_path, session: { email:       user.email,","                                  password:    password,","                                  remember_me: remember_me }","    else","      session[:user_id] = user.id","    end","  end","","  private","","    # Returns true inside an integration test.","    def integration_test?","      defined?(post_via_redirect)","    end"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":13,"column":1},"end":{"row":13,"column":3}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":1},"end":{"row":14,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":14,"column":0},"end":{"row":14,"column":1}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":1},"end":{"row":15,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":15,"column":0},"end":{"row":15,"column":1}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":19,"column":0},"end":{"row":19,"column":3}},"text":"   "},{"action":"removeLines","range":{"start":{"row":7,"column":0},"end":{"row":19,"column":0}},"nl":"\n","lines":["","  fixtures :all","  # Returns true if a test user is logged in.","  def is_logged_in?","    !session[:user_id].nil?","  end"," "," ","  # Logs in a test user.","  def log_in_as(user, options = {})","    password    = options[:password]    || 'password'","    remember_me = options[:remember_me] || '1'"]},{"action":"insertText","range":{"start":{"row":7,"column":0},"end":{"row":7,"column":82}},"text":"  # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order."},{"action":"insertText","range":{"start":{"row":7,"column":82},"end":{"row":8,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":8,"column":0},"end":{"row":9,"column":0}},"lines":["  #"]},{"action":"insertText","range":{"start":{"row":9,"column":0},"end":{"row":9,"column":68}},"text":"  # Note: You'll currently still have to declare fixtures explicitly"},{"action":"removeText","range":{"start":{"row":9,"column":70},"end":{"row":9,"column":71}},"text":"f"},{"action":"insertText","range":{"start":{"row":9,"column":70},"end":{"row":9,"column":71}},"text":"n"},{"action":"removeText","range":{"start":{"row":9,"column":83},"end":{"row":9,"column":84}},"text":"_"},{"action":"insertText","range":{"start":{"row":9,"column":83},"end":{"row":9,"column":84}},"text":" "},{"action":"removeText","range":{"start":{"row":9,"column":88},"end":{"row":9,"column":89}},"text":"?"},{"action":"insertText","range":{"start":{"row":9,"column":88},"end":{"row":9,"column":89}},"text":"s"},{"action":"removeLines","range":{"start":{"row":11,"column":0},"end":{"row":24,"column":0}},"nl":"\n","lines":["                                  password:    password,","                                  remember_me: remember_me }","    else","      session[:user_id] = user.id","    end","  end","","  private","","    # Returns true inside an integration test.","    def integration_test?","      defined?(post_via_redirect)","    end"]},{"action":"removeText","range":{"start":{"row":10,"column":2},"end":{"row":10,"column":58}},"text":"    post login_path, session: { email:       user.email,"},{"action":"removeText","range":{"start":{"row":10,"column":2},"end":{"row":11,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":10,"column":2},"end":{"row":10,"column":43}},"text":"# -- they do not yet inherit this setting"},{"action":"insertText","range":{"start":{"row":10,"column":43},"end":{"row":11,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":11,"column":0},"end":{"row":13,"column":0}},"lines":["  fixtures :all",""]},{"action":"insertText","range":{"start":{"row":13,"column":0},"end":{"row":13,"column":59}},"text":"  # Add more helper methods to be used by all tests here..."}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":7,"column":0},"end":{"row":7,"column":17}},"text":"  # Setup all fix"},{"action":"insertText","range":{"start":{"row":7,"column":0},"end":{"row":8,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":8,"column":0},"end":{"row":9,"column":0}},"lines":["  fixtures :all"]},{"action":"insertText","range":{"start":{"row":9,"column":0},"end":{"row":9,"column":6}},"text":"  # Re"},{"action":"removeText","range":{"start":{"row":9,"column":9},"end":{"row":9,"column":10}},"text":"e"},{"action":"insertText","range":{"start":{"row":9,"column":9},"end":{"row":9,"column":10}},"text":"n"},{"action":"removeText","range":{"start":{"row":11,"column":0},"end":{"row":11,"column":68}},"text":"  # Note: You'll currently still have to declare fixtures explicitly"},{"action":"removeLines","range":{"start":{"row":10,"column":0},"end":{"row":11,"column":0}},"nl":"\n","lines":["  #"]},{"action":"removeText","range":{"start":{"row":9,"column":12},"end":{"row":9,"column":71}},"text":"in test/fixtures/*.yml for all tests in alphabetical order."},{"action":"removeText","range":{"start":{"row":9,"column":12},"end":{"row":10,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":9,"column":12},"end":{"row":9,"column":45}},"text":"true if a test user is logged in."},{"action":"insertText","range":{"start":{"row":9,"column":45},"end":{"row":10,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":10,"column":0},"end":{"row":19,"column":0}},"lines":["  def is_logged_in?","    !session[:user_id].nil?","  end"," "," ","  # Logs in a test user.","  def log_in_as(user, options = {})","    password    = options[:password]    || 'password'","    remember_me = options[:remember_me] || '1'"]},{"action":"insertText","range":{"start":{"row":19,"column":0},"end":{"row":19,"column":3}},"text":"   "},{"action":"removeText","range":{"start":{"row":19,"column":5},"end":{"row":19,"column":6}},"text":"n"},{"action":"insertText","range":{"start":{"row":19,"column":5},"end":{"row":19,"column":6}},"text":"f"},{"action":"removeText","range":{"start":{"row":19,"column":18},"end":{"row":19,"column":19}},"text":" "},{"action":"insertText","range":{"start":{"row":19,"column":18},"end":{"row":19,"column":19}},"text":"_"},{"action":"removeText","range":{"start":{"row":19,"column":23},"end":{"row":19,"column":24}},"text":"s"},{"action":"insertText","range":{"start":{"row":19,"column":23},"end":{"row":19,"column":24}},"text":"?"},{"action":"removeText","range":{"start":{"row":23,"column":0},"end":{"row":23,"column":59}},"text":"  # Add more helper methods to be used by all tests here..."},{"action":"removeLines","range":{"start":{"row":21,"column":0},"end":{"row":23,"column":0}},"nl":"\n","lines":["  fixtures :all",""]},{"action":"removeText","range":{"start":{"row":20,"column":2},"end":{"row":20,"column":43}},"text":"# -- they do not yet inherit this setting"},{"action":"removeText","range":{"start":{"row":20,"column":2},"end":{"row":21,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":20,"column":2},"end":{"row":20,"column":58}},"text":"    post login_path, session: { email:       user.email,"},{"action":"insertText","range":{"start":{"row":20,"column":58},"end":{"row":21,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":21,"column":0},"end":{"row":34,"column":0}},"lines":["                                  password:    password,","                                  remember_me: remember_me }","    else","      session[:user_id] = user.id","    end","  end","","  private","","    # Returns true inside an integration test.","    def integration_test?","      defined?(post_via_redirect)","    end"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":20,"column":2},"end":{"row":20,"column":2},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1415428872514,"hash":"4858b769bd0395c627b351744ea378b4edf12eb2"}