{"changed":true,"filter":false,"title":"users_login_test.rb","tooltip":"/test/integration/users_login_test.rb","value":"require 'test_helper'\n\nclass UsersLoginTest < ActionDispatch::IntegrationTest\n\n  test \"login with invalid information\" do\n    get login_path\n    assert_template 'sessions/new'\n    post login_path, session: { email: \"\", password: \"\" }\n    assert_template 'sessions/new'\n    assert_not flash.empty?\n    get root_path\n    assert flash.empty?\n  end\n  \n  test \"login with valid information followed by logout\" do\n    get login_path\n    post login_path, session: { email: @user.email, password: 'password' }\n    assert is_logged_in?\n    assert_redirected_to @user\n    follow_redirect!\n    assert_template 'users/show'\n    assert_select \"a[href=?]\", login_path, count: 0\n    assert_select \"a[href=?]\", logout_path\n    assert_select \"a[href=?]\", user_path(@user)\n    delete logout_path\n    assert_not is_logged_in?\n    assert_redirected_to root_url\n    # Simulate a user clicking logout in a second window.\n    delete logout_path\n    follow_redirect!\n    assert_select \"a[href=?]\", login_path\n    assert_select \"a[href=?]\", logout_path,      count: 0\n    assert_select \"a[href=?]\", user_path(@user), count: 0\n  end\n\n  \n    test \"login with remembering\" do\n    \n    log_in_as(@user, remember_me: '1')\n    assert_not_nil cookies['remember_token']\n  end\n\n  test \"login without remembering\" do\n    log_in_as(@user, remember_me: '0')\n    assert_nil cookies['remember_token']\n  end\nend","undoManager":{"mark":3,"position":4,"stack":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":37,"column":0},"end":{"row":37,"column":5}},"text":"  end"},{"action":"removeLines","range":{"start":{"row":14,"column":0},"end":{"row":37,"column":0}},"nl":"\n","lines":["  test \"login with valid information followed by logout\" do","    get login_path","    post login_path, session: { email: @user.email, password: 'password' }","    assert is_logged_in?","    assert_redirected_to @user","    follow_redirect!","    assert_template 'users/show'","    assert_select \"a[href=?]\", login_path, count: 0","    assert_select \"a[href=?]\", logout_path","    assert_select \"a[href=?]\", user_path(@user)","    delete logout_path","    assert_not is_logged_in?","    assert_redirected_to root_url","    follow_redirect!","    assert_select \"a[href=?]\", login_path","    assert_select \"a[href=?]\", logout_path,      count: 0","    assert_select \"a[href=?]\", user_path(@user), count: 0","    # Simulate a user clicking logout in a second window.","    delete logout_path","    follow_redirect!","    assert_select \"a[href=?]\", login_path","    assert_select \"a[href=?]\", logout_path,      count: 0","    assert_select \"a[href=?]\", user_path(@user), count: 0"]},{"action":"insertText","range":{"start":{"row":14,"column":0},"end":{"row":14,"column":59}},"text":"  test \"login with valid information followed by logout\" do"},{"action":"insertText","range":{"start":{"row":14,"column":59},"end":{"row":15,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":15,"column":0},"end":{"row":34,"column":0}},"lines":["    get login_path","    post login_path, session: { email: @user.email, password: 'password' }","    assert is_logged_in?","    assert_redirected_to @user","    follow_redirect!","    assert_template 'users/show'","    assert_select \"a[href=?]\", login_path, count: 0","    assert_select \"a[href=?]\", logout_path","    assert_select \"a[href=?]\", user_path(@user)","    delete logout_path","    assert_not is_logged_in?","    assert_redirected_to root_url","    # Simulate a user clicking logout in a second window.","    delete logout_path","    follow_redirect!","    assert_select \"a[href=?]\", login_path","    assert_select \"a[href=?]\", logout_path,      count: 0","    assert_select \"a[href=?]\", user_path(@user), count: 0","  end"]},{"action":"insertText","range":{"start":{"row":34,"column":0},"end":{"row":34,"column":3}},"text":"end"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":34,"column":2},"end":{"row":34,"column":3}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":34,"column":1},"end":{"row":34,"column":2}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":34,"column":0},"end":{"row":34,"column":1}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":4},"end":{"row":38,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":38,"column":0},"end":{"row":38,"column":4}},"text":"    "}]}]]},"ace":{"folds":[],"scrolltop":120,"scrollleft":0,"selection":{"start":{"row":37,"column":4},"end":{"row":37,"column":4},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1415470074727}